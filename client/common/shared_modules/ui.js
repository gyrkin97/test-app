// --- ФАЙЛ: client/common/shared_modules/ui.js (ПОЛНАЯ ИТОГОВАЯ ВЕРСИЯ) ---
// Этот модуль содержит общие функции для управления пользовательским интерфейсом,
// такие как отображение уведомлений и централизованная обработка ошибок.

/**
 * Отображает всплывающее уведомление (тост) с заданным сообщением и стилем.
 * Использует глобально подключенную библиотеку Toastify.js.
 * 
 * @param {string} message - Текст сообщения для отображения.
 * @param {'success' | 'error' | 'info'} type - Тип уведомления, определяющий его цвет.
 */
export function showToast(message, type = 'info') {
    // Определяем CSS-класс в зависимости от типа уведомления.
    // Эти классы определены в вашем кастомном файле toastify.min.css
    const className = {
        success: 'toast-success',
        error: 'toast-error',
        info: 'toast-info'
    }[type] || 'toast-info';

    Toastify({
        text: message,
        duration: 4000, // Уведомление будет видно 4 секунды
        newWindow: true,
        close: true, // Показать кнопку "крестик" для закрытия
        gravity: "top", // Появляться сверху
        position: "right", // Справа
        stopOnFocus: true, // Останавливать таймер, если курсор над уведомлением
        className: className, // Применяем наши кастомные стили
    }).showToast();
}

/**
 * Централизованный обработчик ошибок для пользовательского интерфейса.
 * Логирует полную ошибку в консоль для разработчика и показывает 
 * пользователю стандартизированное, дружелюбное уведомление.
 * 
 * @param {Error} error - Объект ошибки, который был перехвачен в блоке catch.
 * @param {string} context - Строка, описывающая, где (в каком процессе) произошла ошибка. 
 *                           Например, "Загрузка списка командировок".
 */
export function handleUIError(error, context) {
    // Логируем полную информацию об ошибке в консоль для отладки.
    console.error(`Произошла ошибка в контексте "${context}":`, error);

    // В будущем здесь можно добавить интеграцию с системами мониторинга ошибок,
    // например, Sentry или LogRocket.
    // Sentry.captureException(error, { extra: { context } });

    // Показываем пользователю простое и понятное сообщение об ошибке.
    showToast(`Ошибка: ${context}. Пожалуйста, попробуйте обновить страницу.`, 'error');
}